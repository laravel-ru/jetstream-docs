(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{320:function(t,s,a){t.exports=a.p+"assets/img/redirect-confirm.d03b19d0.png"},321:function(t,s,a){t.exports=a.p+"assets/img/modal-confirm.29bb2150.png"},389:function(t,s,a){"use strict";a.r(s);var n=a(40),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"password-confirmation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#password-confirmation"}},[t._v("#")]),t._v(" Password Confirmation")]),t._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#introduction"}},[t._v("Introduction")])]),n("li",[n("a",{attrs:{href:"#redirect-password-confirmation"}},[t._v("Redirect Password Confirmation")]),n("ul",[n("li",[n("a",{attrs:{href:"#redirect-password-confirmation-via-livewire"}},[t._v("Redirect Password Confirmation Via Livewire")])]),n("li",[n("a",{attrs:{href:"#redirect-password-confirmation-via-inertia"}},[t._v("Redirect Password Confirmation Via Inertia")])])])]),n("li",[n("a",{attrs:{href:"#modal-password-confirmation"}},[t._v("Modal Password Confirmation")]),n("ul",[n("li",[n("a",{attrs:{href:"#modal-password-confirmation-via-livewire"}},[t._v("Modal Password Confirmation Via Livewire")])]),n("li",[n("a",{attrs:{href:"#modal-password-confirmation-via-inertia"}},[t._v("Modal Password Confirmation Via Inertia")])])])]),n("li",[n("a",{attrs:{href:"#customizing-how-passwords-are-confirmed"}},[t._v("Customizing How Passwords Are Confirmed")])])])]),n("p"),t._v(" "),n("h2",{attrs:{id:"introduction"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),n("p",[t._v("While building your application, you may occasionally have actions that should require the user to confirm their password before the action is performed. For example, Jetstream itself requires users to confirm their password before changing their two-factor authentication settings. Thankfully, Jetstream has built-in functionality to make this a cinch.")]),t._v(" "),n("p",[t._v("Jetstream provides two approaches to password confirmation: redirect based password confirmation and modal based password confirmation.")]),t._v(" "),n("h4",{attrs:{id:"redirect-based-password-confirmation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redirect-based-password-confirmation"}},[t._v("#")]),t._v(" Redirect Based Password Confirmation")]),t._v(" "),n("p",[t._v("Redirect based password confirmation is typically used when the user needs to confirm their password before accessing an entire screen that is rendered by your application, such as a billing settings screen.")]),t._v(" "),n("p",[t._v("This form of password confirmation redirects the user to a dedicated password confirmation screen where they must confirm their password before being redirected to their intended destination.")]),t._v(" "),n("h4",{attrs:{id:"modal-based-password-confirmation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#modal-based-password-confirmation"}},[t._v("#")]),t._v(" Modal Based Password Confirmation")]),t._v(" "),n("p",[t._v("Modal based password authentication might be used when you would like the user to confirm their password before performing a specific action, such as when enabling two-factor authentication.")]),t._v(" "),n("p",[t._v("This form of password confirmation displays a modal window that allows the user to confirm their password before their intended request is executed.")]),t._v(" "),n("h2",{attrs:{id:"redirect-password-confirmation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redirect-password-confirmation"}},[t._v("#")]),t._v(" Redirect Password Confirmation")]),t._v(" "),n("p",[t._v("The following documentation will discuss how to use redirect based password confirmation in Jetstream. Redirect based password confirmation is typically used when the user needs to confirm their password before accessing an entire screen that is rendered by your application, such as a billing settings screen.")]),t._v(" "),n("p",[t._v("This form of password confirmation redirects the user to a dedicated password confirmation screen where they must confirm their password before being redirected to their intended destination.")]),t._v(" "),n("p",[n("img",{attrs:{src:a(320),alt:"Screenshot of Password Confirmation"}})]),t._v(" "),n("h3",{attrs:{id:"redirect-password-confirmation-via-livewire"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redirect-password-confirmation-via-livewire"}},[t._v("#")]),t._v(" Redirect Password Confirmation Via Livewire")]),t._v(" "),n("h4",{attrs:{id:"protecting-routes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#protecting-routes"}},[t._v("#")]),t._v(" Protecting Routes")]),t._v(" "),n("p",[t._v("To implement password confirmation via redirect to a password confirmation screen, you should ensure that the route that will render the view that requires password confirmation and any routes that perform the confirmed actions are assigned the "),n("code",[t._v("password.confirm")]),t._v(" middleware.")]),t._v(" "),n("p",[t._v("This middleware is included with the default installation of Laravel and will ensure that the user is redirected to your application's password confirmation screen if they attempt to access the routes without confirming their password:")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("Route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'/billing'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("middleware")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'password.confirm'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nRoute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("post")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'/billing'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("middleware")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'password.confirm'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("That view that renders the Livewire stack's password confirmation screen is located at "),n("code",[t._v("resources/views/auth/confirm-password.blade.php")]),t._v(". Generally, this view should not need customization; however, you are free to make general presentational tweaks to this page based on your own application's design.")]),t._v(" "),n("h4",{attrs:{id:"ensuring-the-password-has-been-confirmed"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ensuring-the-password-has-been-confirmed"}},[t._v("#")]),t._v(" Ensuring The Password Has Been Confirmed")]),t._v(" "),n("p",[t._v("Next, Livewire components that contains an action that should require password confirmation before being invoked should use the "),n("code",[t._v("Laravel\\Jetstream\\ConfirmsPasswords")]),t._v(" trait.")]),t._v(" "),n("p",[t._v("After adding this trait to a component, you should call the "),n("code",[t._v("ensurePasswordIsConfirmed")]),t._v(" method within any Livewire action that requires password confirmation. This should be done at the very beginning of the relevant action method:")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Enable administration mode for user.\n *\n * @return void\n */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("enableAdminMode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ensurePasswordIsConfirmed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("Password Confirmation Expiration")]),t._v(" "),n("p",[t._v("Once the user has confirmed their password, they will not be required to re-enter their password until the number of seconds defined by the your application's "),n("code",[t._v("auth.password_timeout")]),t._v(" configuration option have elapsed:")])]),t._v(" "),n("h3",{attrs:{id:"redirect-password-confirmation-via-inertia"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redirect-password-confirmation-via-inertia"}},[t._v("#")]),t._v(" Redirect Password Confirmation Via Inertia")]),t._v(" "),n("p",[t._v("To implement password confirmation via redirect to a password confirmation screen, you should ensure that the route that will render the view that requires password confirmation and any routes that perform the confirmed actions are assigned the "),n("code",[t._v("password.confirm")]),t._v(" middleware.")]),t._v(" "),n("p",[t._v("This middleware is included with the default installation of Laravel and will ensure that the user is redirected to your application's password confirmation screen if they attempt to access the routes without confirming their password:")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("Route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'/billing'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("middleware")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'password.confirm'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nRoute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("post")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'/billing'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("middleware")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'password.confirm'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("That page that renders the Inertia's stack's password confirmation screen is located at "),n("code",[t._v("resources/js/Pages/Auth/ConfirmPassword.vue")]),t._v(". Generally, this page should not need customization; however, you are free to make general presentational tweaks to this page based on your own application's design.")]),t._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("Password Confirmation Expiration")]),t._v(" "),n("p",[t._v("Once the user has confirmed their password, they will not be required to re-enter their password until the number of seconds defined by the your application's "),n("code",[t._v("auth.password_timeout")]),t._v(" configuration option have elapsed:")])]),t._v(" "),n("h2",{attrs:{id:"modal-password-confirmation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#modal-password-confirmation"}},[t._v("#")]),t._v(" Modal Password Confirmation")]),t._v(" "),n("p",[t._v("The following documentation will discuss how to use modal based password confirmation in Jetstream. Modal based password authentication is typically used when you would like the user to confirm their password before performing a specific action, such as when enabling two-factor authentication.")]),t._v(" "),n("p",[t._v("This form of password confirmation displays a modal window that allows the user to confirm their password before their intended request is executed.")]),t._v(" "),n("p",[n("img",{attrs:{src:a(321),alt:"Screenshot of Password Confirmation"}})]),t._v(" "),n("h3",{attrs:{id:"modal-password-confirmation-via-livewire"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#modal-password-confirmation-via-livewire"}},[t._v("#")]),t._v(" Modal Password Confirmation Via Livewire")]),t._v(" "),n("h4",{attrs:{id:"component-preparation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#component-preparation"}},[t._v("#")]),t._v(" Component Preparation")]),t._v(" "),n("p",[t._v("If you are using the Livewire stack, the Livewire component that contains the action that should require password confirmation before being invoked should use the "),n("code",[t._v("Laravel\\Jetstream\\ConfirmsPasswords")]),t._v(" trait.")]),t._v(" "),n("h4",{attrs:{id:"the-confirms-password-blade-component"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#the-confirms-password-blade-component"}},[t._v("#")]),t._v(" The "),n("code",[t._v("confirms-password")]),t._v(" Blade Component")]),t._v(" "),n("p",[t._v("Next, in your application's user interface, you should wrap the button that triggers the action within the "),n("code",[t._v("confirms-password")]),t._v(" Blade component. The "),n("code",[t._v("confirms-password")]),t._v(" wrapper component should contain a "),n("code",[t._v("wire:then")]),t._v(" directive that specifies which Livewire action should be run once the user's password has been confirmed:")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("x-jet-confirms-password")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("wire:")]),t._v("then")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("enableAdminMode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("x-jet-button")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("button"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("wire:")]),t._v("loading.attr")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("disabled"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        {{ __('Enable') }}\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("x-jet-button")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("x-jet-confirms-password")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("h4",{attrs:{id:"ensuring-the-password-is-confirmed"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ensuring-the-password-is-confirmed"}},[t._v("#")]),t._v(" Ensuring The Password Is Confirmed")]),t._v(" "),n("p",[t._v("After adding the "),n("code",[t._v("confirms-password")]),t._v(" component to your application's user interface, you should call the "),n("code",[t._v("ensurePasswordIsConfirmed")]),t._v(" method within the Livewire action that requires password confirmation. This should be done at the very beginning of the relevant action method:")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Enable administration mode for user.\n *\n * @return void\n */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("enableAdminMode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ensurePasswordIsConfirmed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("Password Confirmation Expiration")]),t._v(" "),n("p",[t._v("Once the user has confirmed their password, they will not be required to re-enter their password until the number of seconds defined by the your application's "),n("code",[t._v("auth.password_timeout")]),t._v(" configuration option have elapsed:")])]),t._v(" "),n("h3",{attrs:{id:"modal-password-confirmation-via-inertia"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#modal-password-confirmation-via-inertia"}},[t._v("#")]),t._v(" Modal Password Confirmation Via Inertia")]),t._v(" "),n("h4",{attrs:{id:"the-confirmspassword-vue-component"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#the-confirmspassword-vue-component"}},[t._v("#")]),t._v(" The "),n("code",[t._v("ConfirmsPassword")]),t._v(" Vue Component")]),t._v(" "),n("p",[t._v("If you are using the Inertia stack, you should wrap the user interface element that triggers an action requiring password confirmation with the "),n("code",[t._v("ConfirmsPassword")]),t._v(" Vue component provided by Jetstream. To get started, import the "),n("code",[t._v("ConfirmsPassword")]),t._v(" component into your page:")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" JetConfirmsPassword "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./Jetstream/ConfirmsPassword'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    components"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        JetConfirmsPassword"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("Next, wrap the component around the user interface element that triggers the action that should be confirmed. Your page should listen for the "),n("code",[t._v("ConfirmsPassword")]),t._v(" component's "),n("code",[t._v("@confirmed")]),t._v(" event in order to trigger the method that should be called once the user's password is confirmed:")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("jet-confirms-password")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@confirmed")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("enableAdminMode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("jet-button")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("button"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":class")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("opacity-25"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(": enabling }"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":disabled")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("enabling"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        Enable\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("jet-button")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("jet-confirms-password")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("h4",{attrs:{id:"ensuring-the-password-is-confirmed-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ensuring-the-password-is-confirmed-2"}},[t._v("#")]),t._v(" Ensuring The Password Is Confirmed")]),t._v(" "),n("p",[t._v("After adding the "),n("code",[t._v("ConfirmsPassword")]),t._v(" component to your user interface, you should ensure that the route that performs the confirmed action is assigned the "),n("code",[t._v("password.confirm")]),t._v(" middleware. This middleware is included with the default installation of Laravel:")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[t._v("Route"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("post")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'/admin-mode'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("middleware")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'password.confirm'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("Password Confirmation Expiration")]),t._v(" "),n("p",[t._v("Once the user has confirmed their password, they will not be required to re-enter their password until the number of seconds defined by the your application's "),n("code",[t._v("auth.password_timeout")]),t._v(" configuration option have elapsed:")])]),t._v(" "),n("h2",{attrs:{id:"customizing-how-passwords-are-confirmed"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#customizing-how-passwords-are-confirmed"}},[t._v("#")]),t._v(" Customizing How Passwords Are Confirmed")]),t._v(" "),n("p",[t._v("Sometimes, you may wish to customize how the user's password is validated during confirmation. To do so, you may use the "),n("code",[t._v("Fortify::confirmPasswordsUsing")]),t._v(" method. This method accepts a closure which receives the authenticated user instance and the "),n("code",[t._v("password")]),t._v(" input field of the request. The closure should return "),n("code",[t._v("true")]),t._v(" if the password is valid for the given user. Typically, this method should be called from the "),n("code",[t._v("boot")]),t._v(" method of your "),n("code",[t._v("JetstreamServiceProvider")]),t._v(":")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token package"}},[t._v("Illuminate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Support"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Facades"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Hash")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token package"}},[t._v("Laravel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Fortify"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Fortify")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Загрузка любых служб приложений.\n *\n * @return void\n */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("boot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n    Fortify"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("confirmPasswordsUsing")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$user")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$password")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Hash"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("check")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$password")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$user")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("password")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v('If you prefer to encapsulate your password confirmation process within a class instead of a closure, you may pass a PHP "callable" array to the '),n("code",[t._v("confirmPasswordsUsing")]),t._v(" method:")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token package"}},[t._v("App"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Actions"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ConfirmPassword")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token package"}},[t._v("Laravel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Fortify"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Fortify")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nFortify"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("confirmPasswordsUsing")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfirmPassword")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'__invoke'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);